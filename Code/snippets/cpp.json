{
/*
	// Place your snippets for C++ here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	}
*/
	"Init header": {
		"prefix": "myheader",
		"body": [
			"#pragma once",
			"",
			"namespace $1 {",
			"",
			"class $2 {",
			"public:",
			"\t$2() { /* nop */ }",
			"\t~$2() { /* nop */ }",
			"",
			"\t// No copy and move.",
			"\t$2(const $2&) = delete;",
			"\t$2& operator=(const $2&) = delete;",
			"\t$2($2&&) = delete;",
			"\t$2& operator=($2&&) = delete;",
			"private:",
			"};",
			"",
			"} /* namespace $1 */"
		],
		"description": "Init header w/ class & namespace declaration"
	}
}
